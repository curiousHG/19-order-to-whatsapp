{"version":3,"file":"src_components_OrderPage_js.js","mappings":"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","sources":["webpack://frontend/./src/api/getCategory.js","webpack://frontend/./src/components/OrderPage.js","webpack://frontend/./src/components/Sidebar.js","webpack://frontend/./src/components/SidebarLink.js","webpack://frontend/./src/components/images/logo.jpg"],"sourcesContent":["// define a function that will make the API call\nimport axios from 'axios';\n\nexport default async function getAllProducts() {\n    // make a GET request to fetch the data\n\n    // create a false lag\n    // await new Promise(resolve => setTimeout(resolve, 10000));\n    return axios.get('/store/category')\n        .then(res => {\n            // console.log(res.data);\n            return res.data;\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}\n","import React, { useEffect, useState, lazy } from \"react\";\nimport { Typography, Button, Box, Grid } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nconst LazyCategoryList = lazy(() => import(\"./CategoryList\"));\nimport axios from \"axios\";\nimport Sidebar from \"./Sidebar\";\nimport logo from \"./images/logo.jpg\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport getAllProducts from \"../api/getCategory\";\nimport MyLoader from \"./Loading\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\n\n// rewrite OrderPage with function and latest react methods\n\nconst OrderPage = () => {\n  const [details, setDetails] = useState([]);\n  const [filledData, setFilledData] = useState({});\n  const [categoryNames, setCategoryNames] = useState([]);\n\n  // how to get component render time\n\n  useEffect(() => {\n    getAllProducts()\n      .then((data) => {\n        setDetails(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const useLocalStorage = (key, value) => {\n    if (value) {\n      localStorage.setItem(key, JSON.stringify(value));\n    } else {\n      let data = localStorage.getItem(key);\n      return JSON.parse(data);\n    }\n  }\n\n  const removeEmptyItems = () => {\n    let data = filledData;\n    for (let key in data) {\n      // if first character of value is not a number delete\n      if (data[key][0] < '0' || data[key][0] > '9') {\n        delete data[key];\n      }\n    }\n    setFilledData(data);\n  }\n\n  const sendData = () => {\n    removeEmptyItems();\n    // console.log(filledData);\n    useLocalStorage(\"order\", filledData);\n  }\n\n  if (details.length === 0) {\n    return <MyLoader />;\n  }\n  return (\n    <div style={{ overflowX: \"hidden\", padding: \"5px\" }}>\n      <Grid container spacing={1}>\n        <Grid item xs={4}>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              image={logo}\n              title=\"Logo\"\n              sx={{\n                backgroundSize: \"contain\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"center\",\n                margin: \"0 auto\",\n                borderRadius: \"2px\",\n                shadow: \"2px 2px 5px #000000\",\n              }}\n            />\n          </Card>\n\n          <Sidebar info={details} />\n\n          <Box textAlign=\"center\">\n            <Link\n              to={{ pathname: \"/final\", state: filledData }}\n              style={{ textDecoration: \"none\" }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={sendData}\n              >\n                <Typography variant=\"h3\">Confirm Order</Typography>\n              </Button>\n            </Link>\n          </Box>\n        </Grid>\n        <Grid item xs={8}>\n          <div style={{ maxHeight: \"100vh\", overflowX: \"hidden\" }}>\n            {details.map((item) => (\n              <LazyCategoryList\n                key={item.id}\n                item={item}\n                data={filledData}\n                padding={2}\n                style={{ color: \"blue\" }}\n              />\n            ))}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n\n}\n\nexport default OrderPage;","// import \"./css/sidebar.css\";\nimport React, { Component } from \"react\";\nimport SidebarLink from \"./SidebarLink\";\nimport logo from \"./images/logo.jpg\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\n\nexport default class Sidebar extends Component {\n  \n  render() {\n    return (\n      <div>\n        <div className=\"sidebar\" >\n          {this.props.info.map((item) => {\n            return <SidebarLink key={item.id} text={item.name} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","// import \"../css/sidebarLink.css\";\nimport React, { Component } from \"react\";\nimport { Button } from \"@mui/material\";\nexport default class SidebarLink extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div\n        className=\"link\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Button\n          onClick={() => {\n            document.getElementById(this.props.text).scrollIntoView({\n              behavior: \"smooth\"\n            });\n          }}\n          style={{\n            textDecoration: \"none\",\n            // color: \"#F7F6BB\",\n            color: \"white\",\n            fontSize: \"2rem\",\n            fontStyle: \"italic\",\n          }}\n        >\n          {this.props.text}\n        </Button>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"d8fff34a5b1c4107126f8c84374b0894.jpg\";"],"names":["async","getAllProducts","axios","get","then","res","data","catch","err","console","log","LazyCategoryList","lazy","defaults","xsrfHeaderName","xsrfCookieName","OrderPage","details","setDetails","useState","filledData","setFilledData","categoryNames","setCategoryNames","useEffect","length","React","MyLoader","style","overflowX","padding","Grid","container","spacing","item","xs","Card","CardMedia","component","image","logo","title","sx","backgroundSize","backgroundRepeat","backgroundPosition","margin","borderRadius","shadow","Sidebar","info","Box","textAlign","Link","to","pathname","state","textDecoration","Button","variant","color","onClick","sendData","removeEmptyItems","key","useLocalStorage","value","localStorage","getItem","JSON","parse","setItem","stringify","Typography","maxHeight","map","id","Component","render","className","this","props","SidebarLink","text","name","constructor","super","display","flexDirection","justifyContent","document","getElementById","scrollIntoView","behavior","fontSize","fontStyle"],"sourceRoot":""}