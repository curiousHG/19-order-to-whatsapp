{"version":3,"file":"src_pages_OrderPage_js.js","mappings":"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","sources":["webpack://frontend/./src/api/getCategory.js","webpack://frontend/./src/components/Sidebar.js","webpack://frontend/./src/components/SidebarLink.js","webpack://frontend/./src/pages/OrderPage.js","webpack://frontend/./src/assets/images/logo.jpg"],"sourcesContent":["// define a function that will make the API call\nimport axios from 'axios';\n\nexport default async function getAllProducts() {\n    // make a GET request to fetch the data\n\n    // create a false lag\n    // await new Promise(resolve => setTimeout(resolve, 10000));\n    return axios.get('/store/category')\n        .then(res => {\n            // console.log(res.data);\n            return res.data;\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}\n","// import \"./css/sidebar.css\";\nimport React, { Component } from \"react\";\nimport SidebarLink from \"./SidebarLink\";\nimport logo from \"../assets/images/logo.jpg\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\n\nexport default class Sidebar extends Component {\n  \n  render() {\n    return (\n      <div>\n        <div className=\"sidebar\" >\n          {this.props.info.map((item) => {\n            return <SidebarLink key={item.id} text={item.name} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","// import \"../css/sidebarLink.css\";\nimport React, { Component } from \"react\";\nimport { Button } from \"@mui/material\";\nexport default class SidebarLink extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div\n        className=\"link\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Button\n          onClick={() => {\n            document.getElementById(this.props.text).scrollIntoView({\n              behavior: \"smooth\"\n            });\n          }}\n          style={{\n            textDecoration: \"none\",\n            // color: \"#F7F6BB\",\n            color: \"white\",\n            fontSize: \"2rem\",\n            fontStyle: \"italic\",\n          }}\n        >\n          {this.props.text}\n        </Button>\n      </div>\n    );\n  }\n}\n","import React, { useEffect, useState, lazy } from \"react\";\nimport { Typography, Button, Box, Grid } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nconst LazyCategoryList = lazy(() => import(\"../components/CategoryList\"));\nimport axios from \"axios\";\nimport Sidebar from \"../components/Sidebar\";\nimport logo from \"../assets/images/logo.jpg\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport getAllProducts from \"../api/getCategory\";\nimport MyLoader from \"../components/Loading\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\n\n// rewrite OrderPage with function and latest react methods\n\nconst OrderPage = () => {\n  const [details, setDetails] = useState([]);\n  const [filledData, setFilledData] = useState({});\n  const [categoryNames, setCategoryNames] = useState([]);\n\n  // how to get component render time\n\n  useEffect(() => {\n    getAllProducts()\n      .then((data) => {\n        setDetails(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const useLocalStorage = (key, value) => {\n    if (value) {\n      localStorage.setItem(key, JSON.stringify(value));\n    } else {\n      let data = localStorage.getItem(key);\n      return JSON.parse(data);\n    }\n  }\n\n  const removeEmptyItems = () => {\n    let data = filledData;\n    for (let key in data) {\n      // if first character of value is not a number delete\n      if (data[key][0] < '0' || data[key][0] > '9') {\n        delete data[key];\n      }\n    }\n    setFilledData(data);\n  }\n\n  const sendData = () => {\n    removeEmptyItems();\n    // console.log(filledData);\n    useLocalStorage(\"order\", filledData);\n  }\n\n  if (details.length === 0) {\n    return <MyLoader />;\n  }\n  return (\n    <div style={{ overflowX: \"hidden\", padding: \"5px\" }}>\n      <Grid container spacing={1}>\n        <Grid item xs={4}>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              image={logo}\n              title=\"Logo\"\n              sx={{\n                backgroundSize: \"contain\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"center\",\n                margin: \"0 auto\",\n                borderRadius: \"2px\",\n                shadow: \"2px 2px 5px #000000\",\n              }}\n            />\n          </Card>\n\n          <Sidebar info={details} />\n\n          <Box textAlign=\"center\">\n            <Link\n              to={{ pathname: \"/final\", state: filledData }}\n              style={{ textDecoration: \"none\" }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={sendData}\n              >\n                <Typography variant=\"h3\">Confirm Order</Typography>\n              </Button>\n            </Link>\n          </Box>\n        </Grid>\n        <Grid item xs={8}>\n          <div style={{ maxHeight: \"100vh\", overflowX: \"hidden\" }}>\n            {details.map((item) => (\n              <LazyCategoryList\n                key={item.id}\n                item={item}\n                data={filledData}\n                padding={2}\n                style={{ color: \"blue\" }}\n              />\n            ))}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n\n}\n\nexport default OrderPage;","export default __webpack_public_path__ + \"d8fff34a5b1c4107126f8c84374b0894.jpg\";"],"names":["async","getAllProducts","axios","get","then","res","data","catch","err","console","log","Sidebar","Component","render","React","className","this","props","info","map","item","SidebarLink","key","id","text","name","constructor","super","style","display","flexDirection","justifyContent","Button","onClick","document","getElementById","scrollIntoView","behavior","textDecoration","color","fontSize","fontStyle","LazyCategoryList","lazy","defaults","xsrfHeaderName","xsrfCookieName","OrderPage","details","setDetails","useState","filledData","setFilledData","categoryNames","setCategoryNames","useEffect","length","MyLoader","overflowX","padding","Grid","container","spacing","xs","Card","CardMedia","component","image","logo","title","sx","backgroundSize","backgroundRepeat","backgroundPosition","margin","borderRadius","shadow","Box","textAlign","Link","to","pathname","state","variant","sendData","removeEmptyItems","useLocalStorage","value","localStorage","getItem","JSON","parse","setItem","stringify","Typography","maxHeight"],"sourceRoot":""}