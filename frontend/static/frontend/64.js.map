{"version":3,"file":"64.js","mappings":"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","sources":["webpack://frontend/./src/components/SidebarLink.js","webpack://frontend/./src/components/images/logo.jpg","webpack://frontend/./src/components/Sidebar.js","webpack://frontend/./src/components/OrderPage.js","webpack://frontend/./src/api/getCategory.js"],"sourcesContent":["// import \"../css/sidebarLink.css\";\nimport React, { Component } from \"react\";\nimport { Button } from \"@mui/material\";\nexport default class SidebarLink extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div\n        className=\"link\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Button\n          onClick={() => {\n            document.getElementById(this.props.text).scrollIntoView({\n              behavior: \"smooth\"\n            });\n          }}\n          style={{\n            textDecoration: \"none\",\n            color: \"white\",\n            fontSize: \"2rem\",\n            fontStyle: \"italic\",\n          }}\n        >\n          {this.props.text}\n        </Button>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"d8fff34a5b1c4107126f8c84374b0894.jpg\";","// import \"./css/sidebar.css\";\nimport React, { Component } from \"react\";\nimport SidebarLink from \"./SidebarLink\";\nimport logo from \"./images/logo.jpg\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\n\nexport default class Sidebar extends Component {\n  \n  render() {\n    return (\n      <div>\n        <div className=\"sidebar\" >\n          {this.props.info.map((item) => {\n            return <SidebarLink key={item.id} text={item.name} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useEffect, useState, lazy } from \"react\";\nimport { Typography, Button, Box, Grid } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nconst LazyCategoryList = lazy(() => import(\"./CategoryList\"));\nimport axios from \"axios\";\nimport Sidebar from \"./Sidebar\";\nimport logo from \"./images/logo.jpg\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport getAllProducts from \"../api/getCategory\";\nimport MyLoader from \"./Loading\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\n\n// rewrite OrderPage with function and latest react methods\n\nconst OrderPage = () => {\n  const [details, setDetails] = useState([]);\n  const [filledData, setFilledData] = useState({});\n  const [categoryNames, setCategoryNames] = useState([]);\n\n  // how to get component render time\n\n  useEffect(() => {\n    getAllProducts()\n      .then((data) => {\n        setDetails(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const useLocalStorage = (key, value) => {\n    if (value) {\n      localStorage.setItem(key, JSON.stringify(value));\n    } else {\n      let data = localStorage.getItem(key);\n      return JSON.parse(data);\n    }\n  }\n\n  const removeEmptyItems = () => {\n    let data = filledData;\n    for (let key in data) {\n      // if first character of value is not a number delete\n      if (data[key][0] < '0' || data[key][0] > '9') {\n        delete data[key];\n      }\n    }\n    setFilledData(data);\n  }\n\n  const sendData = () => {\n    removeEmptyItems();\n    // console.log(filledData);\n    useLocalStorage(\"order\", filledData);\n  }\n\n  if (details.length === 0) {\n    return <MyLoader />;\n  }\n  return (\n    <div style={{ overflowX: \"hidden\", padding: \"5px\" }}>\n      <Grid container spacing={1}>\n        <Grid item xs={4}>\n          <Card>\n            <CardMedia\n              component=\"img\"\n              image={logo}\n              title=\"Logo\"\n              sx={{\n                backgroundSize: \"contain\",\n                backgroundRepeat: \"no-repeat\",\n                backgroundPosition: \"center\",\n                margin: \"0 auto\",\n                borderRadius: \"2px\",\n                shadow: \"2px 2px 5px #000000\",\n              }}\n            />\n          </Card>\n\n          <Sidebar info={details} />\n\n          <Box textAlign=\"center\">\n            <Link\n              to={{ pathname: \"/final\", state: filledData }}\n              style={{ textDecoration: \"none\" }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={sendData}\n              >\n                <Typography variant=\"h3\">Confirm Order</Typography>\n              </Button>\n            </Link>\n          </Box>\n        </Grid>\n        <Grid item xs={8}>\n          <div style={{ maxHeight: \"100vh\", overflowX: \"hidden\" }}>\n            {details.map((item) => (\n              <LazyCategoryList\n                key={item.id}\n                item={item}\n                data={filledData}\n                padding={2}\n                style={{ color: \"blue\" }}\n              />\n            ))}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n\n}\n\nexport default OrderPage;","// define a function that will make the API call\nimport axios from 'axios';\n\nexport default async function getAllProducts() {\n    // make a GET request to fetch the data\n\n    // create a false lag\n    // await new Promise(resolve => setTimeout(resolve, 10000));\n    return axios.get('/store/category')\n        .then(res => {\n            // console.log(res.data);\n            return res.data;\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}\n"],"names":["SidebarLink","Component","constructor","props","super","render","React","className","style","display","flexDirection","justifyContent","Button","onClick","document","getElementById","this","text","scrollIntoView","behavior","textDecoration","color","fontSize","fontStyle","Sidebar","info","map","item","key","id","name","LazyCategoryList","lazy","axios","OrderPage","details","setDetails","useState","filledData","setFilledData","categoryNames","setCategoryNames","useEffect","async","then","res","data","catch","err","console","log","getAllProducts","length","MyLoader","overflowX","padding","Grid","container","spacing","xs","Card","CardMedia","component","image","logo","title","sx","backgroundSize","backgroundRepeat","backgroundPosition","margin","borderRadius","shadow","Box","textAlign","Link","to","pathname","state","variant","sendData","removeEmptyItems","useLocalStorage","value","localStorage","getItem","JSON","parse","setItem","stringify","Typography","maxHeight"],"sourceRoot":""}